From d2022ce17fdc127eb418a70720897bf876489ea0 Mon Sep 17 00:00:00 2001
From: Rudi Heitbaum <rudi@heitbaum.com>
Date: Thu, 28 Dec 2023 06:29:00 +0000
Subject: [PATCH 1/2] TagLibVFSStream: update function declarations to support
 taglib-2.0

ref:
- https://github.com/taglib/taglib/commit/ca8c2e07ecae6c8c5bb1c47a1f11f5c87fbcb4c2

long/ulong updated to offset_t/size_t in taglib/toolkit/tiostream.h

Signed-off-by: Rudi Heitbaum <rudi@heitbaum.com>
---
 xbmc/music/tags/TagLibVFSStream.cpp |  9 +++++++++
 xbmc/music/tags/TagLibVFSStream.h   | 11 +++++++++++
 2 files changed, 20 insertions(+)

diff --git a/xbmc/music/tags/TagLibVFSStream.cpp b/xbmc/music/tags/TagLibVFSStream.cpp
index 1d2b454abbfe3..2008aba187e73 100644
--- a/xbmc/music/tags/TagLibVFSStream.cpp
+++ b/xbmc/music/tags/TagLibVFSStream.cpp
@@ -11,6 +11,7 @@
 
 #include <limits.h>
 
+#include <taglib/taglib.h>
 #include <taglib/tiostream.h>
 
 using namespace XFILE;
@@ -90,7 +91,11 @@ void TagLibVFSStream::writeBlock(const ByteVector &data)
  * \note This method is slow since it requires rewriting all of the file
  * after the insertion point.
  */
+#if (TAGLIB_MAJOR_VERSION >= 2)
+void TagLibVFSStream::insert(const ByteVector& data, TagLib::offset_t start, size_t replace)
+#else
 void TagLibVFSStream::insert(const ByteVector &data, TagLib::ulong start, TagLib::ulong replace)
+#endif
 {
   if (data.size() == replace)
   {
@@ -180,7 +185,11 @@ void TagLibVFSStream::insert(const ByteVector &data, TagLib::ulong start, TagLib
  * \note This method is slow since it involves rewriting all of the file
  * after the removed portion.
  */
+#if (TAGLIB_MAJOR_VERSION >= 2)
+void TagLibVFSStream::removeBlock(TagLib::offset_t start, size_t length)
+#else
 void TagLibVFSStream::removeBlock(TagLib::ulong start, TagLib::ulong length)
+#endif
 {
   TagLib::ulong bufferLength = bufferSize();
 
diff --git a/xbmc/music/tags/TagLibVFSStream.h b/xbmc/music/tags/TagLibVFSStream.h
index d56705535353c..e0030103a5767 100644
--- a/xbmc/music/tags/TagLibVFSStream.h
+++ b/xbmc/music/tags/TagLibVFSStream.h
@@ -10,6 +10,7 @@
 
 #include "filesystem/File.h"
 
+#include <taglib/taglib.h>
 #include <taglib/tiostream.h>
 
 namespace MUSIC_INFO
@@ -56,7 +57,13 @@ namespace MUSIC_INFO
      * \note This method is slow since it requires rewriting all of the file
      * after the insertion point.
      */
+#if (TAGLIB_MAJOR_VERSION >= 2)
+    void insert(const TagLib::ByteVector& data,
+                TagLib::offset_t start = 0,
+                size_t replace = 0) override;
+#else
     void insert(const TagLib::ByteVector &data, TagLib::ulong start = 0, TagLib::ulong replace = 0) override;
+#endif
 
     /*!
      * Removes a block of the file starting a \a start and continuing for
@@ -65,7 +72,11 @@ namespace MUSIC_INFO
      * \note This method is slow since it involves rewriting all of the file
      * after the removed portion.
      */
+#if (TAGLIB_MAJOR_VERSION >= 2)
+    void removeBlock(TagLib::offset_t start = 0, size_t length = 0) override;
+#else
     void removeBlock(TagLib::ulong start = 0, TagLib::ulong length = 0) override;
+#endif
 
     /*!
      * Returns true if the file is read only (or if the file can not be opened).

From 6f5dff4b4916fa4e6334b0dda5e512fe24f6c91e Mon Sep 17 00:00:00 2001
From: Rudi Heitbaum <rudi@heitbaum.com>
Date: Thu, 28 Dec 2023 05:15:22 +0000
Subject: [PATCH 2/2] TagLoaderTagLib: migrate from APE::Item::toStringList():
 use values()

ref:
- https://github.com/taglib/taglib/commit/10094f66b938ab0e444e2c28cd6bf9871f1f075e

Signed-off-by: Rudi Heitbaum <rudi@heitbaum.com>
---
 xbmc/music/tags/TagLoaderTagLib.cpp | 50 ++++++++++++++---------------
 1 file changed, 25 insertions(+), 25 deletions(-)

diff --git a/xbmc/music/tags/TagLoaderTagLib.cpp b/xbmc/music/tags/TagLoaderTagLib.cpp
index 6eb591a0c4b4f..c1b36318b2e0d 100644
--- a/xbmc/music/tags/TagLoaderTagLib.cpp
+++ b/xbmc/music/tags/TagLoaderTagLib.cpp
@@ -500,19 +500,19 @@ bool CTagLoaderTagLib::ParseTag(APE::Tag *ape, EmbeddedArt *art, CMusicInfoTag&
   for (APE::ItemListMap::ConstIterator it = itemListMap.begin(); it != itemListMap.end(); ++it)
   {
     if (it->first == "ARTIST")
-      SetArtist(tag, StringListToVectorString(it->second.toStringList()));
+      SetArtist(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "ARTISTSORT")
-      SetArtistSort(tag, StringListToVectorString(it->second.toStringList()));
+      SetArtistSort(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "ARTISTS")
-      SetArtistHints(tag, StringListToVectorString(it->second.toStringList()));
+      SetArtistHints(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "ALBUMARTIST" || it->first == "ALBUM ARTIST")
-      SetAlbumArtist(tag, StringListToVectorString(it->second.toStringList()));
+      SetAlbumArtist(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "ALBUMARTISTSORT")
-      SetAlbumArtistSort(tag, StringListToVectorString(it->second.toStringList()));
+      SetAlbumArtistSort(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "ALBUMARTISTS" || it->first == "ALBUM ARTISTS")
-      SetAlbumArtistHints(tag, StringListToVectorString(it->second.toStringList()));
+      SetAlbumArtistHints(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "COMPOSERSORT")
-      SetComposerSort(tag, StringListToVectorString(it->second.toStringList()));
+      SetComposerSort(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "ALBUM")
       tag.SetAlbum(it->second.toString().to8Bit(true));
     else if (it->first == "TITLE")
@@ -528,7 +528,7 @@ bool CTagLoaderTagLib::ParseTag(APE::Tag *ape, EmbeddedArt *art, CMusicInfoTag&
     else if (it->first == "ORIGINALYEAR")
       tag.SetOriginalDate(it->second.toString().to8Bit(true));
     else if (it->first == "GENRE")
-      SetGenre(tag, StringListToVectorString(it->second.toStringList()));
+      SetGenre(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "MOOD")
       tag.SetMood(it->second.toString().to8Bit(true));
     else if (it->first == "COMMENT")
@@ -538,32 +538,32 @@ bool CTagLoaderTagLib::ParseTag(APE::Tag *ape, EmbeddedArt *art, CMusicInfoTag&
     else if (it->first == "ENCODEDBY")
     {}
     else if (it->first == "COMPOSER")
-      AddArtistRole(tag, "Composer", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Composer", StringListToVectorString(it->second.values()));
     else if (it->first == "CONDUCTOR")
-      AddArtistRole(tag, "Conductor", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Conductor", StringListToVectorString(it->second.values()));
     else if (it->first == "BAND")
-      AddArtistRole(tag, "Band", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Band", StringListToVectorString(it->second.values()));
     else if (it->first == "ENSEMBLE")
-      AddArtistRole(tag, "Ensemble", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Ensemble", StringListToVectorString(it->second.values()));
     else if (it->first == "LYRICIST")
-      AddArtistRole(tag, "Lyricist", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Lyricist", StringListToVectorString(it->second.values()));
     else if (it->first == "WRITER")
-      AddArtistRole(tag, "Writer", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Writer", StringListToVectorString(it->second.values()));
     else if ((it->first == "MIXARTIST") || (it->first == "REMIXER"))
-      AddArtistRole(tag, "Remixer", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Remixer", StringListToVectorString(it->second.values()));
     else if (it->first == "ARRANGER")
-      AddArtistRole(tag, "Arranger", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Arranger", StringListToVectorString(it->second.values()));
     else if (it->first == "ENGINEER")
-      AddArtistRole(tag, "Engineer", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Engineer", StringListToVectorString(it->second.values()));
     else if (it->first == "PRODUCER")
-      AddArtistRole(tag, "Producer", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Producer", StringListToVectorString(it->second.values()));
     else if (it->first == "DJMIXER")
-      AddArtistRole(tag, "DJMixer", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "DJMixer", StringListToVectorString(it->second.values()));
     else if (it->first == "MIXER")
-      AddArtistRole(tag, "Mixer", StringListToVectorString(it->second.toStringList()));
+      AddArtistRole(tag, "Mixer", StringListToVectorString(it->second.values()));
     else if (it->first == "PERFORMER")
       // Picard uses PERFORMER tag as musician credits list formatted "name (instrument)"
-      AddArtistInstrument(tag, StringListToVectorString(it->second.toStringList()));
+      AddArtistInstrument(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "LABEL")
       tag.SetRecordLabel(it->second.toString().to8Bit(true));
     else if (it->first == "COMPILATION")
@@ -579,11 +579,11 @@ bool CTagLoaderTagLib::ParseTag(APE::Tag *ape, EmbeddedArt *art, CMusicInfoTag&
     else if (it->first == "REPLAYGAIN_ALBUM_PEAK")
       replayGainInfo.ParsePeak(ReplayGain::ALBUM, it->second.toString().toCString(true));
     else if (it->first == "MUSICBRAINZ_ARTISTID")
-      tag.SetMusicBrainzArtistID(SplitMBID(StringListToVectorString(it->second.toStringList())));
+      tag.SetMusicBrainzArtistID(SplitMBID(StringListToVectorString(it->second.values())));
     else if (it->first == "MUSICBRAINZ_ALBUMARTISTID")
-      tag.SetMusicBrainzAlbumArtistID(SplitMBID(StringListToVectorString(it->second.toStringList())));
+      tag.SetMusicBrainzAlbumArtistID(SplitMBID(StringListToVectorString(it->second.values())));
     else if (it->first == "MUSICBRAINZ_ALBUMARTIST")
-      SetAlbumArtist(tag, StringListToVectorString(it->second.toStringList()));
+      SetAlbumArtist(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "MUSICBRAINZ_ALBUMID")
       tag.SetMusicBrainzAlbumID(it->second.toString().to8Bit(true));
     else if (it->first == "MUSICBRAINZ_RELEASEGROUPID")
@@ -591,7 +591,7 @@ bool CTagLoaderTagLib::ParseTag(APE::Tag *ape, EmbeddedArt *art, CMusicInfoTag&
     else if (it->first == "MUSICBRAINZ_TRACKID")
       tag.SetMusicBrainzTrackID(it->second.toString().to8Bit(true));
     else if (it->first == "MUSICBRAINZ_ALBUMTYPE")
-      SetReleaseType(tag, StringListToVectorString(it->second.toStringList()));
+      SetReleaseType(tag, StringListToVectorString(it->second.values()));
     else if (it->first == "BPM")
       tag.SetBPM(it->second.toString().toInt());
     else if (it->first == "MUSICBRAINZ_ALBUMSTATUS")
